# Vagrant configuration
VAGRANT_API_VERSION = "2"

# Machines configuration
box = "bento/ubuntu-20.04"
vm_memory = 2048
vm_cpus = 2

# Ansible provision configuration
config_file = "ansible/ansible.cfg"
playbook = "ansible/playbook.yml"

master = {
    :hostname => "master",
    :box => box,
    :ram => vm_memory,
    :cpu => vm_cpus
}

worker = {
    :hostname => "worker",
    :box => box,
    :ram => vm_memory,
    :cpu => vm_cpus
}

def configure_machine_node(config, machine, node)
    node.vm.box = machine[:box]
    node.vm.hostname = machine[:hostname]
    node.vm.network "private_network"
    node.vm.provider "vmware_desktop" do |vmware|
      vmware.memory = machine[:ram]
      vmware.cpus = machine[:cpu]
      vmware.allowlist_verified = true
    end
end

def configure_docker_provision(node)
    node.vm.provision "docker"
end

def configure_ansible_provision(
    node,
    playbook,
    config_file,
    groups
)
    node.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.config_file = config_file
        ansible.playbook = playbook
        ansible.limit = "all"
        ansible.groups = groups
    end
end

Vagrant.configure(VAGRANT_API_VERSION) do |config|
    [worker].each do |machine|
        config.vm.define machine[:hostname] do |node|
            configure_machine_node(config, machine, node)
            configure_docker_provision(node)
        end
    end

    config.vm.define master[:hostname] do |node|
        configure_machine_node(config, master, node)
        configure_docker_provision(node)

        node.vm.network "forwarded_port", guest: 80, host: 80
        node.vm.network "forwarded_port", guest: 443, host: 443

        ansible_groups = {
            "master" => [master[:hostname]],
            "worker" => [worker[:hostname]]
        }

        configure_ansible_provision(
            node,
            playbook,
            config_file,
            ansible_groups
        )
    end
end
